void dropbook();
task main(){
// int repet = 50;
int myarray[40];
int dist;

SetSensorLowspeed(IN_4);
         int i = 0;

Wait(2000);
repeat(40){

         if(SensorUS(IN_4) < 55 && SensorUS(IN_4) > 40){
         myarray[i] = SensorUS(IN_4);
         }
         else{
         myarray[i] = 100;
         }
         OnFwd(OUT_B, 100);
         OnFwd(OUT_C, -100);
         Wait(75);
         //Wait(150);
         Off(OUT_BC);
         i = i + 1;
         Wait(500);
}
Off(OUT_BC);
float small;
small = myarray[0];

for(int j = 0; j < 40; j++){
    if(myarray[j] < small){
        small = myarray[j];
    }
}
Wait(2000);
/*
NumOut(3, 3, small, DRAW_OPT_NORMAL);
Wait(100000);
}
*/
dist = SensorUS(IN_4);
//minvalue = ArrayMin(myarray, NA, NA);
//while(abs(SensorUS(IN_4) - small) > 1){
while(abs(dist - small) > 1){
//while (dist != small){
    OnFwd(OUT_B, 100);
    OnFwd(OUT_C, -100);
    Wait(75);
    Off(OUT_BC);
    Wait(500);
    dist = SensorUS(IN_4);
}
Off(OUT_BC);

// kora fram till vagg

while(SensorUS(IN_4) > 15){


    OnFwdReg(OUT_BC, 40, OUT_REGMODE_SPEED);

}
Off(OUT_BC);

Wait(1000);

// Svanga och kora 10 sek

OnFwd(OUT_B, 65);
OnFwd(OUT_C, -65);
Wait(750);
Off(OUT_BC);
//OnFwdReg(OUT_BC, 100, OUT_REGMODE_SPEED);
repeat(10){
OnFwd(OUT_B, 90);
OnFwd(OUT_C, 80);
Wait(500);
OnFwd(OUT_B, 90);
OnFwd(OUT_C, 80);
Wait(500);
Off(OUT_BC);
Wait(100);
/*OnFwd(OUT_B, 85);
OnFwd(OUT_C, 80);
Wait(5000); */
}
Off(OUT_BC);
dropbook();
}

void dropbook(){
     OnFwd(OUT_A, 100);
     Wait(500);
     Off(OUT_A);
}
